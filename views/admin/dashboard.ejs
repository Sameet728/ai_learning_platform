<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Admin Dashboard - Student Analytics</title>
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/js/select2.min.js"></script>
    <link href="https://cdnjs.cloudflare.com/ajax/libs/select2/4.0.13/css/select2.min.css" rel="stylesheet">
    <script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>
    <style>
        body {
            font-family: 'Segoe UI', Tahoma, Geneva, Verdana, sans-serif;
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            margin: 0;
            padding: 20px;
            min-height: 100vh;
        }
        
        .container {
            max-width: 1400px;
            margin: 0 auto;
            background: white;
            border-radius: 15px;
            box-shadow: 0 20px 40px rgba(0,0,0,0.1);
            overflow: hidden;
        }
        
        .header {
            background: linear-gradient(135deg, #2c3e50, #3498db);
            color: white;
            padding: 30px;
            text-align: center;
        }
        
        .header h1 {
            margin: 0;
            font-size: 2.5rem;
            font-weight: 300;
        }
        
        .controls {
            padding: 30px;
            background: #f8f9fa;
            border-bottom: 1px solid #e9ecef;
        }
        
        .control-group {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(300px, 1fr));
            gap: 20px;
            margin-bottom: 20px;
        }
        
        .form-group {
            display: flex;
            flex-direction: column;
        }
        
        .form-group label {
            font-weight: 600;
            margin-bottom: 8px;
            color: #2c3e50;
        }
        
        .form-group select, .form-group input {
            padding: 12px;
            border: 2px solid #e9ecef;
            border-radius: 8px;
            font-size: 14px;
            transition: border-color 0.3s;
        }
        
        .form-group select:focus, .form-group input:focus {
            outline: none;
            border-color: #3498db;
        }
        
        .btn {
            background: linear-gradient(135deg, #3498db, #2980b9);
            color: white;
            border: none;
            padding: 12px 24px;
            border-radius: 8px;
            cursor: pointer;
            font-weight: 600;
            transition: transform 0.2s;
        }
        
        .btn:hover {
            transform: translateY(-2px);
            box-shadow: 0 5px 15px rgba(52, 152, 219, 0.3);
        }
        
        .charts-container {
            padding: 30px;
        }
        
        .chart-wrapper {
            margin-bottom: 40px;
            background: white;
            border-radius: 10px;
            padding: 20px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.08);
        }
        
        .chart-title {
            font-size: 1.5rem;
            font-weight: 600;
            color: #2c3e50;
            margin-bottom: 20px;
            text-align: center;
        }
        
        .loading {
            text-align: center;
            padding: 40px;
            color: #7f8c8d;
        }
        
        .stats-grid {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
            gap: 20px;
            margin-bottom: 30px;
        }
        
        .stat-card {
            background: white;
            padding: 20px;
            border-radius: 10px;
            box-shadow: 0 5px 15px rgba(0,0,0,0.08);
            text-align: center;
        }
        
        .stat-value {
            font-size: 2rem;
            font-weight: bold;
            color: #3498db;
            margin-bottom: 5px;
        }
        
        .stat-label {
            color: #7f8c8d;
            font-size: 0.9rem;
        }
        
        #studentSearch {
            width: 100%;
        }
        
        .no-data {
            text-align: center;
            padding: 60px;
            color: #7f8c8d;
        }
        
        .selected-students {
            margin-top: 15px;
        }
        
        .student-tag {
            display: inline-block;
            background: #3498db;
            color: white;
            padding: 5px 12px;
            border-radius: 20px;
            margin: 3px;
            font-size: 0.85rem;
        }
    </style>
</head>
<body>
    <div class="container">
        <div class="header">
            <h1>üìä Student Analytics Dashboard</h1>
            <p>Compare and analyze student performance across subjects</p>
        </div>
        
        <div class="controls">
            <div class="control-group">
                <div class="form-group">
                    <label for="studentSearch">üîç Search & Select Students:</label>
                    <select id="studentSearch" multiple="multiple"></select>
                    <div class="selected-students" id="selectedStudents"></div>
                </div>
                
                <div class="form-group">
                    <label for="topicFilter">üìö Subject/Topic Filter:</label>
                    <select id="topicFilter">
                        <option value="all">All Subjects</option>
                        <% topics.forEach(topic => { %>
                            <option value="<%= topic %>"><%= topic %></option>
                        <% }) %>
                    </select>
                </div>
            </div>
            
            <div style="text-align: center;">
                <button class="btn" onclick="loadChartData()">üìà Generate Analytics</button>
                <button class="btn" onclick="clearSelection()" style="background: linear-gradient(135deg, #e74c3c, #c0392b); margin-left: 10px;">üóëÔ∏è Clear Selection</button>
            </div>
        </div>
        
        <div class="charts-container">
            <div id="statsContainer" style="display: none;">
                <div class="stats-grid" id="statsGrid"></div>
            </div>
            
            <div class="chart-wrapper" id="barChartContainer" style="display: none;">
                <div class="chart-title">üìä Student Performance Comparison</div>
                <canvas id="barChart" width="400" height="200"></canvas>
            </div>
            
            <div class="chart-wrapper" id="lineChartContainer" style="display: none;">
                <div class="chart-title">üìà Average Scores by Student</div>
                <canvas id="lineChart" width="400" height="200"></canvas>
            </div>
            
            <div class="no-data" id="noDataMessage">
                <h3>üëÜ Select students and click "Generate Analytics" to view charts</h3>
                <p>Use the search box above to find and select students for comparison</p>
            </div>
            
            <div class="loading" id="loadingMessage" style="display: none;">
                <h3>‚è≥ Loading analytics data...</h3>
            </div>
        </div>
    </div>

    <script>
        let barChart = null;
        let lineChart = null;
        let allStudents = [];

        // Initialize Select2 for student search
        $(document).ready(function() {
            $('#studentSearch').select2({
                placeholder: "Search students by name or email...",
                allowClear: true,
                ajax: {
                    url: '/admin/api/search-students',
                    dataType: 'json',
                    delay: 250,
                    data: function (params) {
                        return {
                            q: params.term
                        };
                    },
                    processResults: function (data) {
                        return {
                            results: data.map(student => ({
                                id: student._id,
                                text: `${student.username} (${student.email}) - ${student.educationLevel}`
                            }))
                        };
                    },
                    cache: true
                },
                minimumInputLength: 2
            });
            
            // Load all students for dropdown
            loadAllStudents();
        });

        function loadAllStudents() {
            fetch('/admin/api/all-students')
                .then(response => response.json())
                .then(students => {
                    allStudents = students;
                })
                .catch(error => console.error('Error loading students:', error));
        }

        function loadChartData() {
            const selectedStudentIds = $('#studentSearch').val();
            const selectedTopic = $('#topicFilter').val();
            
            if (!selectedStudentIds || selectedStudentIds.length === 0) {
                alert('Please select at least one student');
                return;
            }

            // Show loading
            document.getElementById('loadingMessage').style.display = 'block';
            document.getElementById('noDataMessage').style.display = 'none';
            
            const queryParams = new URLSearchParams({
                studentIds: selectedStudentIds.join(','),
                topic: selectedTopic
            });

            fetch(`/admin/api/students?${queryParams}`)
                .then(response => response.json())
                .then(data => {
                    displayCharts(data, selectedTopic);
                    document.getElementById('loadingMessage').style.display = 'none';
                })
                .catch(error => {
                    console.error('Error:', error);
                    document.getElementById('loadingMessage').style.display = 'none';
                    alert('Error loading data');
                });
        }

        function displayCharts(studentsData, topic) {
            displayStats(studentsData);
            displayBarChart(studentsData, topic);
            displayLineChart(studentsData);
        }

        function displayStats(studentsData) {
            const statsContainer = document.getElementById('statsContainer');
            const statsGrid = document.getElementById('statsGrid');
            
            const totalStudents = studentsData.length;
            const totalQuizzes = studentsData.reduce((sum, student) => sum + student.totalQuizzes, 0);
            const overallAverage = studentsData.length > 0 ? 
                (studentsData.reduce((sum, student) => sum + parseFloat(student.averageScore), 0) / studentsData.length).toFixed(1) : 0;
            const highestAverage = studentsData.length > 0 ? 
                Math.max(...studentsData.map(s => parseFloat(s.averageScore))).toFixed(1) : 0;

            statsGrid.innerHTML = `
                <div class="stat-card">
                    <div class="stat-value">${totalStudents}</div>
                    <div class="stat-label">Students Selected</div>
                </div>
                <div class="stat-card">
                    <div class="stat-value">${totalQuizzes}</div>
                    <div class="stat-label">Total Quizzes</div>
                </div>
                <div class="stat-card">
                    <div class="stat-value">${overallAverage}%</div>
                    <div class="stat-label">Overall Average</div>
                </div>
                <div class="stat-card">
                    <div class="stat-value">${highestAverage}%</div>
                    <div class="stat-label">Highest Average</div>
                </div>
            `;
            
            statsContainer.style.display = 'block';
        }

        function displayBarChart(studentsData, topic) {
            const ctx = document.getElementById('barChart').getContext('2d');
            
            if (barChart) {
                barChart.destroy();
            }

            const labels = studentsData.map(student => student.username);
            const averageScores = studentsData.map(student => parseFloat(student.averageScore));
            const quizCounts = studentsData.map(student => student.totalQuizzes);

            barChart = new Chart(ctx, {
                type: 'bar',
                data: {
                    labels: labels,
                    datasets: [{
                        label: 'Average Score (%)',
                        data: averageScores,
                        backgroundColor: 'rgba(52, 152, 219, 0.8)',
                        borderColor: 'rgba(52, 152, 219, 1)',
                        borderWidth: 2
                    }, {
                        label: 'Number of Quizzes',
                        data: quizCounts,
                        backgroundColor: 'rgba(155, 89, 182, 0.8)',
                        borderColor: 'rgba(155, 89, 182, 1)',
                        borderWidth: 2,
                        yAxisID: 'y1'
                    }]
                },
                options: {
                    responsive: true,
                    scales: {
                        y: {
                            beginAtZero: true,
                            max: 100,
                            title: {
                                display: true,
                                text: 'Average Score (%)'
                            }
                        },
                        y1: {
                            type: 'linear',
                            display: true,
                            position: 'right',
                            beginAtZero: true,
                            title: {
                                display: true,
                                text: 'Number of Quizzes'
                            },
                            grid: {
                                drawOnChartArea: false,
                            },
                        }
                    },
                    plugins: {
                        title: {
                            display: true,
                            text: topic === 'all' ? 'All Subjects Combined' : `Subject: ${topic}`
                        },
                        legend: {
                            display: true
                        }
                    }
                }
            });

            document.getElementById('barChartContainer').style.display = 'block';
        }

        function displayLineChart(studentsData) {
            const ctx = document.getElementById('lineChart').getContext('2d');
            
            if (lineChart) {
                lineChart.destroy();
            }

            // Create datasets for each student showing their individual quiz scores over time
            const datasets = studentsData.map((student, index) => {
                const colors = [
                    'rgba(52, 152, 219, 1)',
                    'rgba(231, 76, 60, 1)',
                    'rgba(46, 204, 113, 1)',
                    'rgba(155, 89, 182, 1)',
                    'rgba(241, 196, 15, 1)',
                    'rgba(230, 126, 34, 1)'
                ];
                
                return {
                    label: student.username,
                    data: student.scores.map((score, quizIndex) => ({ x: quizIndex + 1, y: score })),
                    borderColor: colors[index % colors.length],
                    backgroundColor: colors[index % colors.length].replace('1)', '0.1)'),
                    fill: false,
                    tension: 0.1
                };
            });

            lineChart = new Chart(ctx, {
                type: 'line',
                data: {
                    datasets: datasets
                },
                options: {
                    responsive: true,
                    scales: {
                        x: {
                            type: 'linear',
                            position: 'bottom',
                            title: {
                                display: true,
                                text: 'Quiz Number'
                            },
                            ticks: {
                                stepSize: 1
                            }
                        },
                        y: {
                            beginAtZero: true,
                            max: 10,
                            title: {
                                display: true,
                                text: 'Quiz Score'
                            }
                        }
                    },
                    plugins: {
                        title: {
                            display: true,
                            text: 'Individual Quiz Scores Over Time'
                        }
                    }
                }
            });

            document.getElementById('lineChartContainer').style.display = 'block';
        }

        function clearSelection() {
            $('#studentSearch').val(null).trigger('change');
            $('#topicFilter').val('all');
            
            // Hide charts
            document.getElementById('statsContainer').style.display = 'none';
            document.getElementById('barChartContainer').style.display = 'none';
            document.getElementById('lineChartContainer').style.display = 'none';
            document.getElementById('noDataMessage').style.display = 'block';
            
            // Destroy existing charts
            if (barChart) {
                barChart.destroy();
                barChart = null;
            }
            if (lineChart) {
                lineChart.destroy();
                lineChart = null;
            }
        }
    </script>
</body>
</html>