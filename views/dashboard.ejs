<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>Dashboard | LearnSmart</title>

    <script src="https://cdnjs.cloudflare.com/ajax/libs/html2canvas/1.4.1/html2canvas.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/jspdf/2.5.1/jspdf.umd.min.js"></script>
    <script src="https://cdn.jsdelivr.net/npm/marked/marked.min.js"></script>
    <script src="https://cdnjs.cloudflare.com/ajax/libs/Chart.js/3.9.1/chart.min.js"></script>
    
    <link rel="preconnect" href="https://fonts.googleapis.com">
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin>
    <link href="https://fonts.googleapis.com/css2?family=Inter:wght@300;400;500;600;700;800&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css">

    <style>
        :root {
            --primary: #4361ee;
            --primary-light: #e8edff;
            --primary-dark: #3550d4;
            --secondary: #7209b7;
            --secondary-light: #f3e8ff;
            --success: #06d6a0;
            --success-light: #ecfdf5;
            --warning: #ffd166;
            --warning-light: #fffbeb;
            --danger: #ef476f;
            --danger-light: #fef2f2;
            --dark: #1e1e2e;
            --light: #f8f9ff;
            --gray-50: #f9fafb;
            --gray-100: #f3f4f6;
            --gray-200: #e5e7eb;
            --gray-300: #d1d5db;
            --gray-400: #9ca3af;
            --gray-500: #6b7280;
            --gray-600: #4b5563;
            --gray-700: #374151;
            --gray-800: #1f2937;
            --gray-900: #111827;
            
            --gradient-primary: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
            --gradient-secondary: linear-gradient(135deg, #f093fb 0%, #f5576c 100%);
            --gradient-success: linear-gradient(135deg, #4facfe 0%, #00f2fe 100%);
            --gradient-bg: linear-gradient(135deg, #f5f7ff 0%, #f0f4ff 100%);
            
            --shadow-sm: 0 1px 2px 0 rgb(0 0 0 / 0.05);
            --shadow-md: 0 4px 6px -1px rgb(0 0 0 / 0.1), 0 2px 4px -2px rgb(0 0 0 / 0.1);
            --shadow-lg: 0 10px 15px -3px rgb(0 0 0 / 0.1), 0 4px 6px -4px rgb(0 0 0 / 0.1);
            --shadow-xl: 0 20px 25px -5px rgb(0 0 0 / 0.1), 0 8px 10px -6px rgb(0 0 0 / 0.1);
            --shadow-hover: 0 25px 50px -12px rgb(0 0 0 / 0.25);
            
            --border-radius: 16px;
            --border-radius-lg: 24px;
            --font-family: 'Inter', -apple-system, BlinkMacSystemFont, sans-serif;
            --transition: all 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            --transition-fast: all 0.15s cubic-bezier(0.4, 0, 0.2, 1);
        }

        * {
            margin: 0;
            padding: 0;
            box-sizing: border-box;
        }

        html {
            scroll-behavior: smooth;
        }

        body {
            font-family: var(--font-family);
            background: var(--gradient-bg);
            color: var(--gray-800);
            line-height: 1.6;
            min-height: 100vh;
            overflow-x: hidden;
        }

        /* Enhanced Navigation */
        .navbar {
            background: rgba(255, 255, 255, 0.95);
            backdrop-filter: blur(20px);
            -webkit-backdrop-filter: blur(20px);
            border-bottom: 1px solid var(--gray-100);
            padding: 1rem 1.5rem;
            position: sticky;
            top: 0;
            z-index: 1000;
            display: flex;
            justify-content: space-between;
            align-items: center;
            transition: var(--transition);
        }

        .navbar.scrolled {
            box-shadow: var(--shadow-lg);
            background: rgba(255, 255, 255, 0.98);
        }

        .navbar-brand {
            display: flex;
            align-items: center;
            gap: 12px;
            text-decoration: none;
            transition: var(--transition);
        }

        .navbar-brand:hover {
            transform: translateY(-1px);
        }

        .logo {
            width: 44px;
            height: 44px;
            background: var(--gradient-primary);
            border-radius: 12px;
            display: flex;
            align-items: center;
            justify-content: center;
            color: white;
            font-weight: 800;
            font-size: 20px;
            box-shadow: var(--shadow-md);
            transition: var(--transition);
        }

        .logo:hover {
            transform: rotate(5deg) scale(1.05);
            box-shadow: var(--shadow-lg);
        }

        .brand-text {
            font-size: 24px;
            font-weight: 800;
            background: var(--gradient-primary);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
        }

        .navbar-nav {
            display: flex;
            align-items: center;
            gap: 8px;
            position: relative;
        }

        .nav-link {
            padding: 12px 18px;
            border-radius: 12px;
            text-decoration: none;
            color: var(--gray-700);
            font-weight: 500;
            transition: var(--transition);
            display: flex;
            align-items: center;
            gap: 8px;
            position: relative;
            overflow: hidden;
        }

        .nav-link::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 100%;
            background: var(--gradient-primary);
            transition: var(--transition);
            z-index: -1;
        }

        .nav-link:hover::before,
        .nav-link.active::before {
            left: 0;
        }

        .nav-link:hover,
        .nav-link.active {
            color: white;
            transform: translateY(-2px);
            box-shadow: var(--shadow-md);
        }

        .nav-link i {
            font-size: 18px;
        }

        .navbar-actions {
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .btn {
            padding: 12px 24px;
            border-radius: 12px;
            font-weight: 600;
            cursor: pointer;
            transition: var(--transition);
            text-decoration: none;
            display: inline-flex;
            align-items: center;
            justify-content: center;
            gap: 8px;
            border: none;
            font-size: 14px;
            position: relative;
            overflow: hidden;
        }

        .btn::before {
            content: '';
            position: absolute;
            top: 50%;
            left: 50%;
            width: 0;
            height: 0;
            background: rgba(255, 255, 255, 0.2);
            border-radius: 50%;
            transition: all 0.6s ease;
            transform: translate(-50%, -50%);
        }

        .btn:hover::before {
            width: 300px;
            height: 300px;
        }

        .btn-primary {
            background: var(--gradient-primary);
            color: white;
            box-shadow: var(--shadow-md);
        }

        .btn-primary:hover {
            transform: translateY(-3px);
            box-shadow: var(--shadow-xl);
        }

        .btn-danger {
            background: var(--gradient-secondary);
            color: white;
            box-shadow: var(--shadow-md);
        }

        .btn-danger:hover {
            transform: translateY(-3px);
            box-shadow: var(--shadow-xl);
        }

        .mobile-toggle {
            display: none;
            background: none;
            border: none;
            font-size: 24px;
            cursor: pointer;
            color: var(--gray-700);
            padding: 8px;
            border-radius: 8px;
            transition: var(--transition);
        }

        .mobile-toggle:hover {
            background: var(--gray-100);
        }

        /* Enhanced Dashboard Content */
        .container {
            max-width: 1400px;
            margin: 0 auto;
            padding: 32px 24px;
        }

        .dashboard-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 40px;
            padding: 24px 0;
            animation: fadeInUp 0.6s ease;
        }

        .header-content h1 {
            font-size: 32px;
            font-weight: 800;
            background: var(--gradient-primary);
            -webkit-background-clip: text;
            -webkit-text-fill-color: transparent;
            background-clip: text;
            margin-bottom: 8px;
        }

        .header-content p {
            color: var(--gray-600);
            font-size: 16px;
            font-weight: 400;
        }

        .header-actions {
            display: flex;
            gap: 12px;
        }

        /* Enhanced Statistics Cards */
        .stats-container {
            display: grid;
            grid-template-columns: repeat(auto-fit, minmax(280px, 1fr));
            gap: 24px;
            margin-bottom: 40px;
        }

        .stat-card {
            background: white;
            border-radius: var(--border-radius-lg);
            padding: 28px;
            box-shadow: var(--shadow-md);
            display: flex;
            align-items: center;
            transition: var(--transition);
            position: relative;
            overflow: hidden;
            border: 1px solid var(--gray-100);
            animation: fadeInUp 0.6s ease;
        }

        .stat-card::before {
            content: '';
            position: absolute;
            top: -50%;
            right: -50%;
            width: 100%;
            height: 100%;
            background: radial-gradient(circle, rgba(67, 97, 238, 0.1) 0%, transparent 70%);
            transition: var(--transition);
            transform: scale(0);
        }

        .stat-card:hover::before {
            transform: scale(1);
        }

        .stat-card:hover {
            transform: translateY(-8px);
            box-shadow: var(--shadow-hover);
            border-color: var(--primary);
        }

        .stat-icon {
            width: 64px;
            height: 64px;
            border-radius: 16px;
            display: flex;
            align-items: center;
            justify-content: center;
            margin-right: 20px;
            font-size: 28px;
            transition: var(--transition);
            position: relative;
            z-index: 1;
        }

        .stat-card:hover .stat-icon {
            transform: scale(1.1) rotate(5deg);
        }

        .stat-content {
            position: relative;
            z-index: 1;
        }

        .stat-content h3 {
            font-size: 28px;
            font-weight: 800;
            margin-bottom: 6px;
            color: var(--gray-900);
        }

        .stat-content p {
            color: var(--gray-600);
            font-size: 14px;
            font-weight: 500;
        }

        /* Enhanced Dashboard Grid */
        .dashboard-grid {
            display: grid;
            grid-template-columns: repeat(auto-fill, minmax(500px, 1fr));
            gap: 28px;
        }

        /* Charts Container */
        .charts-container {
            display: grid;
            grid-template-columns: 2fr 1fr;
            gap: 28px;
            margin-bottom: 40px;
        }

        .chart-card {
            background: white;
            border-radius: var(--border-radius-lg);
            padding: 28px;
            box-shadow: var(--shadow-md);
            transition: var(--transition);
            border: 1px solid var(--gray-100);
            animation: fadeInUp 0.6s ease;
        }

        .chart-card:hover {
            transform: translateY(-4px);
            box-shadow: var(--shadow-lg);
        }

        .chart-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 24px;
            padding-bottom: 16px;
            border-bottom: 1px solid var(--gray-200);
        }

        .chart-title {
            font-size: 18px;
            font-weight: 700;
            color: var(--gray-900);
            display: flex;
            align-items: center;
            gap: 10px;
        }
        
        .chart-export-btn {
            background: var(--gray-100);
            color: var(--gray-700);
            border: none;
            width: 40px;
            height: 40px;
            border-radius: 12px;
            font-size: 16px;
            cursor: pointer;
            transition: var(--transition);
        }

        .chart-export-btn:hover {
            background: var(--primary-light);
            color: var(--primary);
            transform: translateY(-2px);
            box-shadow: var(--shadow-md);
        }

        .chart-container {
            position: relative;
            height: 300px;
            width: 100%;
        }

        .chart-container.small {
            height: 300px;
        }

        /* Enhanced Quiz Cards */
        .card {
            background: white;
            border-radius: var(--border-radius-lg);
            padding: 28px;
            box-shadow: var(--shadow-md);
            transition: var(--transition);
            border: 1px solid var(--gray-100);
            height: fit-content;
            position: relative;
            overflow: hidden;
            animation: fadeInUp 0.6s ease;
        }

        .card::before {
            content: '';
            position: absolute;
            top: 0;
            left: -100%;
            width: 100%;
            height: 4px;
            background: var(--gradient-primary);
            transition: var(--transition);
        }

        .card:hover::before {
            left: 0;
        }

        .card:hover {
            transform: translateY(-6px);
            box-shadow: var(--shadow-hover);
            border-color: var(--primary);
        }

        .card-header {
            display: flex;
            justify-content: space-between;
            align-items: center;
            margin-bottom: 24px;
            padding-bottom: 20px;
            border-bottom: 1px solid var(--gray-200);
        }

        .card-title {
            font-size: 20px;
            font-weight: 700;
            color: var(--gray-900);
            display: flex;
            align-items: center;
            gap: 12px;
        }

        .quiz-info {
            display: flex;
            flex-wrap: wrap;
            gap: 16px;
            margin-bottom: 24px;
        }

        .quiz-info-item {
            display: flex;
            align-items: center;
            gap: 8px;
            color: var(--gray-600);
            font-size: 14px;
            font-weight: 500;
            padding: 8px 12px;
            background: var(--gray-50);
            border-radius: 8px;
        }

        .quiz-score {
            display: inline-flex;
            align-items: center;
            padding: 6px 16px;
            color: white;
            border-radius: 20px;
            font-weight: 700;
            font-size: 14px;
            box-shadow: var(--shadow-sm);
        }

        /* Enhanced Collapsible Sections */
        .collapsible-header {
            display: flex;
            align-items: center;
            justify-content: space-between;
            margin-bottom: 16px;
            color: var(--primary-dark);
            font-weight: 700;
            cursor: pointer;
            padding: 12px 16px;
            background: var(--primary-light);
            border-radius: 12px;
            box-shadow: var(--shadow-sm);
            transition: var(--transition);
        }
        
        .collapsible-header:hover {
            background: var(--primary-dark);
            color: white;
            transform: translateY(-2px);
            box-shadow: var(--shadow-md);
        }

        .collapsible-content {
            max-height: 0;
            overflow: hidden;
            transition: max-height 0.5s cubic-bezier(0.4, 0, 0.2, 1);
        }

        .collapsible-content.expanded {
            max-height: 2000px; /* Adjust as needed */
        }
        
        .question-item {
            margin-bottom: 20px;
            padding: 20px;
            background: var(--gray-50);
            border-radius: 12px;
            border-left: 4px solid transparent;
            transition: var(--transition);
        }
        
        .question-item:hover {
            background: var(--gray-100);
            border-left-color: var(--primary);
        }
        
        .question-item:last-child {
            margin-bottom: 0;
        }

        .question-text {
            font-weight: 600;
            margin-bottom: 12px;
            color: var(--gray-900);
            line-height: 1.5;
        }

        .answer-row {
            display: flex;
            align-items: center;
            gap: 10px;
            margin-bottom: 6px;
            font-size: 14px;
            padding: 8px 12px;
            border-radius: 8px;
            transition: var(--transition);
        }

        .answer-row.correct {
            background: var(--success-light);
            color: var(--success);
            font-weight: 600;
        }

        .answer-row.incorrect {
            background: var(--danger-light);
            color: var(--danger);
            font-weight: 600;
        }

        /* Enhanced AI Resource */
        .ai-resource {
            background: linear-gradient(135deg, var(--gray-50) 0%, var(--secondary-light) 100%);
            border-radius: 16px;
            padding: 24px;
            margin-top: 24px;
            position: relative;
            border: 1px solid var(--gray-200);
            transition: var(--transition);
        }

        .ai-resource:hover {
            box-shadow: var(--shadow-md);
        }

        .ai-resource-header {
            color: var(--secondary);
        }

        .ai-resource-header:hover {
            background: var(--secondary);
            color: white;
        }
        
        .ai-content {
            background: white;
            border-radius: 12px;
            padding: 0 20px;
        }

        .ai-content.expanded {
            padding: 20px;
            margin-top: -8px; /* Smooth transition */
            box-shadow: var(--shadow-md);
        }

        .ai-content p { margin-bottom: 16px; }
        .ai-content h4 { color: var(--primary); margin: 20px 0 12px; font-weight: 700; }
        .ai-content h5 { color: var(--secondary); margin: 16px 0 8px; font-weight: 600; }
        .ai-content ul, .ai-content ol { margin-left: 24px; margin-bottom: 16px; }
        .ai-content li { margin-bottom: 8px; }

        .toggle-icon {
            transition: transform 0.3s cubic-bezier(0.4, 0, 0.2, 1);
            font-size: 18px;
        }

        .toggle-icon.expanded {
            transform: rotate(180deg);
        }

        /* Enhanced Export Button */
        .export-btn {
            background: var(--gradient-success);
            color: white;
            border: none;
            padding: 12px 20px;
            border-radius: 12px;
            font-size: 14px;
            font-weight: 600;
            cursor: pointer;
            display: flex;
            align-items: center;
            gap: 8px;
            transition: var(--transition);
            box-shadow: var(--shadow-sm);
            position: relative;
            overflow: hidden;
        }

        .export-btn:hover {
            transform: translateY(-3px);
            box-shadow: var(--shadow-lg);
        }

        .export-btn:disabled {
            opacity: 0.7;
            cursor: not-allowed;
            transform: none;
        }

        /* No Quizzes State */
        .no-quizzes {
            grid-column: 1 / -1;
            text-align: center;
            padding: 80px 40px;
            background: white;
            border: 2px dashed var(--gray-300);
            border-radius: var(--border-radius-lg);
            animation: fadeInUp 0.6s ease;
        }

        .no-quizzes i {
            font-size: 64px;
            color: var(--gray-400);
            margin-bottom: 24px;
            animation: pulse 2s infinite;
        }

        .no-quizzes h3 {
            font-size: 24px;
            color: var(--gray-800);
            margin-bottom: 16px;
            font-weight: 700;
        }

        .no-quizzes p {
            color: var(--gray-600);
            max-width: 500px;
            margin: 0 auto 32px;
            font-size: 16px;
            line-height: 1.6;
        }

        /* Enhanced Toast */
        .toast {
            position: fixed;
            bottom: 24px;
            right: 24px;
            background: var(--gray-900);
            color: white;
            padding: 16px 24px;
            border-radius: 12px;
            box-shadow: var(--shadow-xl);
            z-index: 10000;
            display: flex;
            align-items: center;
            gap: 12px;
            opacity: 0;
            transform: translateY(100px) scale(0.8);
            transition: all 0.4s cubic-bezier(0.4, 0, 0.2, 1);
            max-width: 400px;
        }

        .toast.show {
            opacity: 1;
            transform: translateY(0) scale(1);
        }

        .toast.success { background: var(--success); }
        .toast.error { background: var(--danger); }
        .toast.info { background: var(--primary); }

        /* Loading Spinner */
        .spinner {
            display: inline-block;
            width: 20px;
            height: 20px;
            border: 2px solid rgba(255, 255, 255, 0.3);
            border-radius: 50%;
            border-top-color: white;
            animation: spin 1s ease-in-out infinite;
        }

        /* Animations */
        @keyframes fadeInUp { from { opacity: 0; transform: translateY(30px); } to { opacity: 1; transform: translateY(0); } }
        @keyframes pulse { 0%, 100% { transform: scale(1); opacity: 1; } 50% { transform: scale(1.05); opacity: 0.8; } }
        @keyframes spin { to { transform: rotate(360deg); } }
        @keyframes slideInLeft { from { opacity: 0; transform: translateX(-100px); } to { opacity: 1; transform: translateX(0); } }

        /* Responsive Design */
        @media (max-width: 1200px) {
            .dashboard-grid { grid-template-columns: 1fr; }
            .charts-container { grid-template-columns: 1fr; }
        }

        @media (max-width: 992px) {
            .navbar-nav {
                display: none; position: absolute; top: 100%; left: 0; right: 0;
                background: rgba(255, 255, 255, 0.98); backdrop-filter: blur(20px);
                flex-direction: column; padding: 24px; box-shadow: var(--shadow-xl);
                border-top: 1px solid var(--gray-200); border-radius: 0 0 20px 20px;
                animation: slideInLeft 0.3s ease;
            }
            .navbar-nav.active { display: flex; }
            .nav-link { width: 100%; justify-content: center; padding: 16px 24px; border-radius: 12px; margin-bottom: 8px; }
            .mobile-toggle { display: block; }
            .navbar-actions { display: none; }
            .stats-container { grid-template-columns: repeat(auto-fit, minmax(240px, 1fr)); }
        }

        @media (max-width: 768px) {
            .container { padding: 24px 16px; }
            .dashboard-header { flex-direction: column; align-items: flex-start; gap: 20px; text-align: left; }
            .header-content h1 { font-size: 28px; }
            .header-actions { width: 100%; }
            .stats-container { grid-template-columns: 1fr; gap: 16px; }
            .dashboard-grid { grid-template-columns: 1fr; gap: 20px; }
            .card, .stat-card, .chart-card { padding: 20px; }
            .card-header { flex-direction: column; align-items: flex-start; gap: 16px; }
            .quiz-info { flex-direction: column; gap: 12px; }
            .chart-container { height: 250px; }
            .chart-container.small { height: 250px; }
        }

        @media (max-width: 576px) {
            .navbar { padding: 1rem; }
            .brand-text { font-size: 20px; }
            .logo { width: 40px; height: 40px; font-size: 18px; }
            .header-actions { flex-direction: column; gap: 12px; }
            .header-actions .btn { width: 100%; justify-content: center; }
            .stat-card { padding: 16px; }
            .stat-icon { width: 56px; height: 56px; font-size: 24px; margin-right: 16px; }
            .stat-content h3 { font-size: 24px; }
            .quiz-info-item { font-size: 13px; }
            .no-quizzes { padding: 60px 20px; }
            .no-quizzes i { font-size: 48px; }
            .toast { bottom: 16px; right: 16px; left: 16px; max-width: none; }
        }
        
        /* Print styles */
        @media print {
            .navbar, .header-actions, .export-btn, .toast, .chart-export-btn { display: none !important; }
            .card { break-inside: avoid; box-shadow: none; border: 1px solid #ddd; }
        }
    </style>
</head>

<body>
    <nav class="navbar" id="navbar">
        <a href="/" class="navbar-brand">
            <div class="logo">LS</div>
            <span class="brand-text">LearnSmart</span>
        </a>
        
        <button class="mobile-toggle" id="mobileToggle">
            <i class="fas fa-bars"></i>
        </button>
        
        <div class="navbar-nav" id="navbarNav">
            <a href="/progress" class="nav-link"><i class="fas fa-chart-line"></i> Progress</a>
            <a href="/notes" class="nav-link"><i class="fas fa-sticky-note"></i> Notes</a>
            <a href="/todo" class="nav-link"><i class="fas fa-tasks"></i> To-Do</a>
            <a href="/dashboard" class="nav-link active"><i class="fas fa-chart-bar"></i> Dashboard</a>
        </div>
        
        <div class="navbar-actions">
            <a href="/quiz" class="btn btn-primary"><i class="fas fa-plus"></i> New Quiz</a>
            <a href="/logout" class="btn btn-danger"><i class="fas fa-sign-out-alt"></i> Logout</a>
        </div>
    </nav>

    <div class="container">
        <header class="dashboard-header">
            <div class="header-content">
                <h1>Your Learning Dashboard</h1>
                <p>Track your progress with intelligent analytics and AI-powered insights</p>
            </div>
            <div class="header-actions">
                <button class="btn btn-primary" onclick="refreshData()">
                    <i class="fas fa-sync"></i> Refresh Data
                </button>
            </div>
        </header>

        <% if (user.quizzes.length > 0) { %>
            <div class="stats-container">
                <div class="stat-card" style="animation-delay: 0.1s;">
                    <div class="stat-icon" style="background: linear-gradient(135deg, rgba(67, 97, 238, 0.1) 0%, rgba(67, 97, 238, 0.2) 100%); color: var(--primary);">
                        <i class="fas fa-check-circle"></i>
                    </div>
                    <div class="stat-content">
                        <%
                            let totalQuestions = 0;
                            let correctAnswers = 0;
                            user.quizzes.forEach(quiz => {
                                totalQuestions += quiz.results.length;
                                quiz.results.forEach(q => {
                                    if (q.isCorrect) correctAnswers++;
                                });
                            });
                            const overallScore = totalQuestions > 0 ? Math.round((correctAnswers / totalQuestions) * 100) : 0;
                        %>
                        <h3><%= overallScore %>%</h3>
                        <p>Overall Score</p>
                    </div>
                </div>
                
                <div class="stat-card" style="animation-delay: 0.2s;">
                    <div class="stat-icon" style="background: linear-gradient(135deg, rgba(114, 9, 183, 0.1) 0%, rgba(114, 9, 183, 0.2) 100%); color: var(--secondary);">
                        <i class="fas fa-book"></i>
                    </div>
                    <div class="stat-content">
                        <%
                            const uniqueTopics = [...new Set(user.quizzes.map(q => q.topic))];
                        %>
                        <h3><%= uniqueTopics.length %></h3>
                        <p>Topics Covered</p>
                    </div>
                </div>
                
                <div class="stat-card" style="animation-delay: 0.3s;">
                    <div class="stat-icon" style="background: linear-gradient(135deg, rgba(6, 214, 160, 0.1) 0%, rgba(6, 214, 160, 0.2) 100%); color: var(--success);">
                        <i class="fas fa-chart-line"></i>
                    </div>
                    <div class="stat-content">
                        <h3><%= user.quizzes.length %></h3>
                        <p>Quizzes Completed</p>
                    </div>
                </div>
                
                <div class="stat-card" style="animation-delay: 0.4s;">
                    <div class="stat-icon" style="background: linear-gradient(135deg, rgba(255, 209, 102, 0.1) 0%, rgba(255, 209, 102, 0.2) 100%); color: var(--warning);">
                        <i class="fas fa-trophy"></i>
                    </div>
                    <div class="stat-content">
                        <%
                            let maxScore = 0;
                            user.quizzes.forEach(quiz => {
                                let correctCount = quiz.results.filter(q => q.isCorrect).length;
                                const score = Math.round((correctCount / quiz.results.length) * 100);
                                if (score > maxScore) maxScore = score;
                            });
                        %>
                        <h3><%= maxScore %>%</h3>
                        <p>Best Score</p>
                    </div>
                </div>
            </div>

            
        <% } %>

        <div class="dashboard-grid">
            <% if (!user || user.quizzes.length === 0) { %>
                <div class="no-quizzes">
                    <i class="fas fa-graduation-cap"></i>
                    <h3>Ready to Start Learning?</h3>
                    <p>Complete your first quiz to unlock detailed analytics, performance insights, and AI-generated learning resources tailored just for you.</p>
                    <a href="/quiz" class="btn btn-primary">
                        <i class="fas fa-play-circle"></i> Take Your First Quiz
                    </a>
                </div>
            <% } else { %>
                <% user.quizzes.slice().reverse().forEach((quiz, index) => { 
                    const reversedIndex = user.quizzes.length - 1 - index;
                    const matchingResource = user.resources.find(r => r.topic === quiz.topic); 
                    
                    let correctCount = quiz.results.filter(q => q.isCorrect).length;
                    const score = Math.round((correctCount / quiz.results.length) * 100);
                    
                    let scoreGradient = 'var(--gradient-success)';
                    if (score < 50) scoreGradient = 'var(--gradient-secondary)';
                    else if (score < 75) scoreGradient = 'linear-gradient(135deg, #ffd166 0%, #f77f00 100%)';
                %>
                    <div class="card" id="quiz-card-<%= reversedIndex %>" style="animation-delay: <%= 0.1 + (index * 0.1) %>s;">
                        <div class="card-header">
                            <h3 class="card-title">
                                <i class="fas fa-book-open" style="color: var(--primary);"></i> 
                                <%= quiz.topic %>
                            </h3>
                            <button class="export-btn" onclick="exportQuizToPDF('<%= reversedIndex %>')">
                                <i class="fas fa-download"></i> Export Report
                            </button>
                        </div>
                        
                        <div class="quiz-info">
                            <div class="quiz-info-item">
                                <i class="fas fa-calendar-alt"></i>
                                <span><%= new Date(quiz.date).toLocaleDateString('en-US', { weekday: 'short', year: 'numeric', month: 'short', day: 'numeric' }) %></span>
                            </div>
                            <div class="quiz-info-item">
                                <i class="fas fa-question-circle"></i>
                                <span><%= quiz.results.length %> Questions</span>
                            </div>
                            <div class="quiz-info-item">
                                <i class="fas fa-clock"></i>
                                <span><%= new Date(quiz.date).toLocaleTimeString('en-US', { hour: '2-digit', minute: '2-digit' }) %></span>
                            </div>
                            <div class="quiz-info-item">
                                <i class="fas fa-chart-line"></i>
                                <span>Score: <span class="quiz-score" style="background: <%= scoreGradient %>;"><%= score %>%</span></span>
                            </div>
                        </div>

                        <div class="collapsible-header" onclick="toggleCollapsible('<%= reversedIndex %>', 'questions')">
                            <span><i class="fas fa-list-ol"></i> Quiz Results</span>
                            <i class="fas fa-chevron-down toggle-icon" id="toggle-icon-questions-<%= reversedIndex %>"></i>
                        </div>
                        <div class="collapsible-content" id="content-questions-<%= reversedIndex %>">
                            <div class="questions-container" style="padding-top: 20px;">
                                <% quiz.results.forEach((q, qIndex) => { %>
                                    <div class="question-item">
                                        <div class="question-text">
                                            <i class="fas fa-question" style="color: var(--primary); margin-right: 8px;"></i>
                                            Q<%= qIndex + 1 %>: <%= q.question || "No question available" %>
                                        </div>
                                        <div class="answer-row correct">
                                            <i class="fas fa-check-circle"></i>
                                            <span><strong>Correct:</strong> <%= q.correctAnswer || "N/A" %></span>
                                        </div>
                                        <div class="answer-row <%= q.isCorrect ? 'correct' : 'incorrect' %>">
                                            <i class="fas <%= q.isCorrect ? 'fa-check-circle' : 'fa-times-circle' %>"></i>
                                            <span><strong>Your Answer:</strong> <%= q.yourAnswer || "N/A" %></span>
                                        </div>
                                    </div>
                                <% }) %>
                            </div>
                        </div>
                        
                        <% if (matchingResource) { %>
                            <div class="ai-resource">
                                <div class="collapsible-header ai-resource-header" onclick="toggleCollapsible('<%= reversedIndex %>', 'ai')">
                                    <div style="display: flex; align-items: center; gap: 10px;">
                                        <i class="fas fa-robot"></i>
                                        <span>AI Learning Resource</span>
                                        <span style="background: var(--success); color: white; padding: 2px 8px; border-radius: 10px; font-size: 11px; font-weight: bold;">GENERATED</span>
                                    </div>
                                    <i class="fas fa-chevron-down toggle-icon" id="toggle-icon-ai-<%= reversedIndex %>"></i>
                                </div>
                                <div class="collapsible-content ai-content" id="content-ai-<%= reversedIndex %>">
                                    <%= matchingResource.content %>
                                </div>
                            </div>
                        <% } else { %>
                            <div class="ai-resource">
                                <div class="collapsible-header ai-resource-header" style="cursor: default;">
                                    <div style="display: flex; align-items: center; gap: 10px;">
                                        <i class="fas fa-robot"></i>
                                        <span>AI Learning Resource</span>
                                        <span style="background: var(--warning); color: white; padding: 2px 8px; border-radius: 10px; font-size: 11px; font-weight: bold;">PENDING</span>
                                    </div>
                                </div>
                                <p style="color: var(--gray-600); font-style: italic; margin: 16px 0 0 0; padding: 16px; background: white; border-radius: 8px;">
                                    <i class="fas fa-magic" style="margin-right: 8px; color: var(--primary);"></i>
                                    AI resource is being generated for this topic. Check back soon for personalized learning materials!
                                </p>
                            </div>
                        <% } %>
                    </div>
                <% }) %>
            <% } %>
        </div>
    </div>

    <div id="toast" class="toast">
        <i class="fas fa-info-circle"></i>
        <span id="toast-message"></span>
    </div>

    <script>
        // Global variables for charts
        let performanceChart, topicChart;

        // Toggle collapsible sections
        function toggleCollapsible(index, type) {
            const contentElement = document.getElementById(`content-${type}-${index}`);
            const toggleIcon = document.getElementById(`toggle-icon-${type}-${index}`);
            
            contentElement.classList.toggle('expanded');
            toggleIcon.classList.toggle('expanded');
        }

        // Enhanced PDF export with better formatting
        function exportQuizToPDF(quizIndex) {
            showToast('Preparing your comprehensive PDF report...', 'info');
            
            const card = document.getElementById(`quiz-card-${quizIndex}`);
            const exportButton = card.querySelector('.export-btn');
            
            const originalButtonText = exportButton.innerHTML;
            exportButton.innerHTML = `<div class="spinner"></div> Exporting`;
            exportButton.disabled = true;
            
            // Expand all collapsible sections for export
            const collapsibleContents = card.querySelectorAll('.collapsible-content');
            const toggleIcons = card.querySelectorAll('.toggle-icon');
            
            collapsibleContents.forEach(content => content.classList.add('expanded'));
            toggleIcons.forEach(icon => icon.classList.add('expanded'));
            
            // Wait for animations to complete before capturing
            setTimeout(() => {
                html2canvas(card, {
                    scale: 2.5, // Increased scale for better quality
                    useCORS: true,
                    logging: false,
                    scrollY: -window.scrollY,
                    backgroundColor: '#ffffff',
                    onclone: (clonedDoc) => {
                        const clonedCard = clonedDoc.getElementById(`quiz-card-${quizIndex}`);
                        if (clonedCard) {
                            clonedCard.style.transform = 'none';
                            clonedCard.style.boxShadow = 'none';
                            clonedCard.style.animation = 'none';
                        }
                    }
                }).then(canvas => {
                    const { jsPDF } = window.jspdf;
                    const imgData = canvas.toDataURL('image/png');
                    const imgWidth = 210; // A4 width in mm
                    const pageHeight = 297; // A4 height in mm
                    const imgHeight = (canvas.height * imgWidth) / canvas.width;
                    let heightLeft = imgHeight;
                    
                    const pdf = new jsPDF('p', 'mm', 'a4');
                    let position = 0;
                    
                    pdf.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);
                    heightLeft -= pageHeight;
                    
                    while (heightLeft > 0) {
                        position = heightLeft - imgHeight;
                        pdf.addPage();
                        pdf.addImage(imgData, 'PNG', 0, position, imgWidth, imgHeight);
                        heightLeft -= pageHeight;
                    }
                    
                    // Add footer to all pages
                    const totalPages = pdf.internal.getNumberOfPages();
                    for (let i = 1; i <= totalPages; i++) {
                        pdf.setPage(i);
                        pdf.setFontSize(10);
                        pdf.setTextColor(150, 150, 150);
                        pdf.text(`Page ${i} of ${totalPages}`, imgWidth - 30, pageHeight - 10);
                        pdf.text('Generated by LearnSmart Dashboard', 20, pageHeight - 10);
                    }
                    
                    // Save the PDF
                    const topic = card.querySelector('.card-title').textContent.replace(/[^\w\s]/gi, '').trim();
                    const safeTopic = topic.replace(/\s+/g, '_').toLowerCase();
                    const timestamp = new Date().toISOString().split('T')[0];
                    pdf.save(`LearnSmart_Report_${safeTopic}_${timestamp}.pdf`);
                    
                    // Collapse sections after export
                    collapsibleContents.forEach(content => content.classList.remove('expanded'));
                    toggleIcons.forEach(icon => icon.classList.remove('expanded'));
                    
                    exportButton.innerHTML = originalButtonText;
                    exportButton.disabled = false;
                    showToast('PDF report exported successfully!', 'success');
                }).catch(err => {
                    console.error('Error generating PDF:', err);
                    exportButton.innerHTML = originalButtonText;
                    exportButton.disabled = false;
                    showToast('Failed to export PDF. Please try again.', 'error');
                });
            }, 500); // Timeout allows animations to finish
        }

        // Enhanced toast notification with better UX
        function showToast(message, type = 'info') {
            const toast = document.getElementById('toast');
            const toastMessage = document.getElementById('toast-message');
            
            toast.className = 'toast';
            toastMessage.textContent = message;
            toast.classList.add(type, 'show');
            
            const delay = Math.max(3000, message.length * 50);
            setTimeout(() => {
                toast.classList.remove('show');
            }, delay);
        }

        // Enhanced refresh data with loading state
        function refreshData() {
            const refreshBtn = document.querySelector('[onclick="refreshData()"]');
            const originalText = refreshBtn.innerHTML;
            
            refreshBtn.innerHTML = '<div class="spinner"></div> Refreshing';
            refreshBtn.disabled = true;
            
            showToast('Refreshing your learning data...', 'info');
            
            setTimeout(() => {
                window.location.reload();
            }, 1500);
        }

        // Navbar scroll effect
        function handleNavbarScroll() {
            const navbar = document.getElementById('navbar');
            if (window.scrollY > 50) {
                navbar.classList.add('scrolled');
            } else {
                navbar.classList.remove('scrolled');
            }
        }

        // Mobile menu toggle with enhanced animations
        function setupMobileMenu() {
            const mobileToggle = document.getElementById('mobileToggle');
            const navbarNav = document.getElementById('navbarNav');
            
            mobileToggle.addEventListener('click', function() {
                navbarNav.classList.toggle('active');
                
                const icon = this.querySelector('i');
                if (navbarNav.classList.contains('active')) {
                    icon.className = 'fas fa-times';
                } else {
                    icon.className = 'fas fa-bars';
                }
            });
        }

        // Run all initialization scripts on DOM content loaded
        document.addEventListener('DOMContentLoaded', function() {
            // Format all AI content elements with Marked.js
            const aiContentElements = document.querySelectorAll('.ai-content');
            aiContentElements.forEach(element => {
                if (element.textContent.trim()) {
                    element.innerHTML = marked.parse(element.textContent.trim());
                }
            });

            // Initialize charts
            initCharts();

            // Setup mobile navigation
            setupMobileMenu();

            // Attach scroll listener for navbar effect
            window.addEventListener('scroll', handleNavbarScroll);
        });
    </script>
</body>
</html>